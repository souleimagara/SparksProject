//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.Microservices.FruitNinjaServer"/> </summary
    public sealed class FruitNinjaServerClient : MicroserviceClient, Beamable.Common.IHaveServiceName
    {
        
        public FruitNinjaServerClient(BeamContext context = null) : 
                base(context)
        {
        }
        
        public string ServiceName
        {
            get
            {
                return "FruitNinjaServer";
            }
        }
        
        /// <summary>
        /// Call the GetStats method on the FruitNinjaServer microservice
        /// <see cref="Beamable.Microservices.FruitNinjaServer.GetStats"/>
        /// </summary>
        public Beamable.Common.Promise<string> GetStats()
        {
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            return this.Request<string>("FruitNinjaServer", "GetStats", serializedFields);
        }
        
        /// <summary>
        /// Call the SendGamePlay method on the FruitNinjaServer microservice
        /// <see cref="Beamable.Microservices.FruitNinjaServer.SendGamePlay"/>
        /// </summary>
        public Beamable.Common.Promise<string> SendGamePlay(string payload)
        {
            object raw_payload = payload;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("payload", raw_payload);
            return this.Request<string>("FruitNinjaServer", "SendGamePlay", serializedFields);
        }
        
        /// <summary>
        /// Call the GetplayerLocation method on the FruitNinjaServer microservice
        /// <see cref="Beamable.Microservices.FruitNinjaServer.GetplayerLocation"/>
        /// </summary>
        public Beamable.Common.Promise<string> GetplayerLocation(long useris)
        {
            object raw_useris = useris;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("useris", raw_useris);
            return this.Request<string>("FruitNinjaServer", "GetplayerLocation", serializedFields);
        }
        
        /// <summary>
        /// Call the GetplayerStats method on the FruitNinjaServer microservice
        /// <see cref="Beamable.Microservices.FruitNinjaServer.GetplayerStats"/>
        /// </summary>
        public Beamable.Common.Promise<string> GetplayerStats(long useris)
        {
            object raw_useris = useris;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("useris", raw_useris);
            return this.Request<string>("FruitNinjaServer", "GetplayerStats", serializedFields);
        }
        
        /// <summary>
        /// Call the GetSparksStatus method on the FruitNinjaServer microservice
        /// <see cref="Beamable.Microservices.FruitNinjaServer.GetSparksStatus"/>
        /// </summary>
        public Beamable.Common.Promise<int> GetSparksStatus()
        {
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            return this.Request<int>("FruitNinjaServer", "GetSparksStatus", serializedFields);
        }
        
        /// <summary>
        /// Call the WithdrawBitcoin method on the FruitNinjaServer microservice
        /// <see cref="Beamable.Microservices.FruitNinjaServer.WithdrawBitcoin"/>
        /// </summary>
        public Beamable.Common.Promise<string> WithdrawBitcoin(string username)
        {
            object raw_username = username;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("username", raw_username);
            return this.Request<string>("FruitNinjaServer", "WithdrawBitcoin", serializedFields);
        }
    }
    
    internal sealed class MicroserviceParametersFruitNinjaServerClient
    {
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_String : MicroserviceClientDataWrapper<string>
        {
        }
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_Int64 : MicroserviceClientDataWrapper<long>
        {
        }
    }
    
    [BeamContextSystemAttribute()]
    public static class ExtensionsForFruitNinjaServerClient
    {
        
        [Beamable.Common.Dependencies.RegisterBeamableDependenciesAttribute()]
        public static void RegisterService(Beamable.Common.Dependencies.IDependencyBuilder builder)
        {
            builder.AddScoped<FruitNinjaServerClient>();
        }
        
        public static FruitNinjaServerClient FruitNinjaServer(this Beamable.Server.MicroserviceClients clients)
        {
            return clients.GetClient<FruitNinjaServerClient>();
        }
    }
}
